---
title: "Class 9 Halloween Candy"
format: gfm
---

In today's class we will examine some data about candy from the 538 website

## Import Data

## Data exploration


> Q1 How many different candy types are in the dataset

```{r}
candy_file <- url("https://raw.githubusercontent.com/fivethirtyeight/data/master/candy-power-ranking/candy-data.csv")

candy = read.csv(candy_file, row.names=1)
head(candy)
```

```{r}
nrow(candy)
```
There are 85 different types of candy in this dataset

> Q2 How many fruity candy types are in the dataset

```{r}
sum(candy$fruity)
```

```{r}
candy["Snickers",]$winpercent
```

```{r}
candy["Warheads",]$winpercent
```

> Q3. What is your favorite candy in the dataset and what is it’s winpercent value?

```{r}
candy["Milky Way",]$winpercent
```


> Q4. What is the winpercent value for “Kit Kat”?

```{r}
candy["Kit Kat",]$winpercent
```


> Q5. What is the winpercent value for “Tootsie Roll Snack Bars”?

```{r}
candy["Tootsie Roll Snack Bars",]$winpercent
```

> Q6. Is there any variable/column that looks to be on a different scale to the majority of the other columns in the dataset?

The sugar percent, price percent, and winpercent are not just 0's and one's because they are not either true or false values, they are measurable. The mean, sd, and histogram columns are also different for the same reason, they are all measurable values

> Q7. What do you think a zero and one represent for the candy$chocolate column?

Zero means chocolate isnt contained in the candy while 1 means that it is

> Q8. Plot a histogram of win_percent values

```{r}
hist(candy$winpercent)
```

```{r}
library(ggplot2)
```

```{r}
ggplot(candy) +
  aes(winpercent) +
  geom_histogram(bins=7)
```

> Q9. Is the distribution of winpercent values symmetrical?

```{r}
mean(candy$winpercent)
```
The distribution is skewed slightly to the right, shown by both the histogram and the fact that the mean is slightly above 50% which should theoretically be the middle

> Q10. Is the center of the distribution above or below 50%?

```{r}
summary(candy$winpercent)
```
The center is above 50, but if you look at the median (outlier influence decreased) then it is below 50.

> Q11. On average is chocolate candy higher ot lower ranked than fruit candy?

- first find all chocolate candy
- find their winpercent values
- calculate the mean of these values

-then do the same for the fruity candy and compare with the mean for chocolate candy

For chocolate
```{r}
chocolate.inds <- candy$chocolate == 1
chocolate.win <- candy[chocolate.inds,]$winpercent
mean(chocolate.win)
```
For fruity
```{r}
fruity.inds <- candy$fruity == 1
fruity.win <- candy[fruity.inds,]$winpercent
mean(fruity.win)
```
Chocolate is generally ranked higher than fruity candy

> Q12. 

```{r}
t.test(chocolate.win, fruity.win)
```

> Q13. What are the five least liked candy types in this set?

```{r}
x <- c(5,6,4)
sort(x)
```

```{r}
x[order(x)]
```
The order function returns the indices that make the input sorted.

```{r}
inds <- order(candy$winpercent)
head(candy[inds,])
```

```{r}
tail(candy[inds,])
```
Nik L Nip, Boston Bakes Beans, Chiclets, Super Bubble, and Jawbusters are the 5 least liked (having the lowest winpercents)


```{r}
ggplot(candy)+ 
  aes(winpercent, rownames(candy))+
  geom_col()
```


```{r}
library(ggplot2)

#| fig-height: 10
#| fig-width: 7

ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col()
```

```{r}
ggsave("mybarplot.png", height=10)
```

![Exported image that is a bit bigger so I can read it](mybarplot.png)


Add my custom colors to my barplot
```{r}
my_cols=rep("gray", nrow(candy))
my_cols[candy$fruity == 1] <- "pink"
my_cols[candy$chocolate == 1] <- "brown"
my_cols[candy$bar == 1] <- "black"
my_cols

```

```{r}
ggplot(candy) + 
  aes(winpercent, reorder(rownames(candy), winpercent)) +
  geom_col(fill=my_cols)
```

 Q17. What is the worst ranked chocolate candy?
- Q18. What is the best ranked fruity candy?

Plot of winpercent vs pricepercent

```{r}
ggplot(candy) +
  aes(winpercent, pricepercent, label=rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text(col=my_cols)
```

There are just too many labels in this above plot to be readable. We can use the `ggrepel` package to do a better job of placing labels so they minimize text overlap

```{r}
library(ggrepel)

ggplot(candy) +
  aes(winpercent, pricepercent, label = rownames(candy)) +
  geom_point(col=my_cols) +
  geom_text_repel(col=my_cols, max.overlaps = 7)
```



## Exploring the correlation structure

```{r}
library(corrplot)

cij <- cor(candy)
cij
```

```{r}
corrplot(cij)
```

> Q22. Examining this plot what two variables are anti-correlated (i.e. have minus values)?

chocolate and fruity b/c red dot

> Q23. Similarly, what two variables are most positively correlated?

chocolate ad bar b/c blue dot


## 6. Principal Coponent Analysis

We will perform a PCA of the candy. Key-question: do ween need to scale the data before PCA?

```{r}
pca <- prcomp(candy, scale=T)
summary(pca)
```

```{r}
plot(pca$x[,1], pca$x[,2], col=my_cols, pch=16)
```

make a ggplot version of this figure:

```{r}
# make a new data-frame with our PCA results and candy data
my_data <- cbind(candy, pca$x[,1:3])
head(my_data)
```

```{r}
ggplot(my_data) +
  aes(PC1, PC2, label=rownames(my_data)) + 
  geom_point(col=my_cols) +
  geom_text_repel(col=my_cols)
```

Make this a bit nicer

```{r}
p <- ggplot(my_data) + 
        aes(x=PC1, y=PC2, 
            size=winpercent/100,  
            text=rownames(my_data),
            label=rownames(my_data)) +
        geom_point(col=my_cols)
p
```

```{r}
library(ggrepel)

p + geom_text_repel(size=3.3, col=my_cols, max.overlaps = 7)  + 
  theme(legend.position = "none") +
  labs(title="Halloween Candy PCA Space",
       subtitle="Colored by type: chocolate bar (dark brown), chocolate other (light brown), fruity (red), other (black)",
       caption="Data from 538")
```

```{r}
#library(plotly)

#ggplotly(p)
```

How do the original variable contribute to our PCs> For this we look at the loadings component of our results object i.e the `pca$rotation` object?

Make a barplot with ggplot and order the bars by their value. Recall that you need a data.frame as input for ggplot

```{r}
res <- as.data.frame(pca$rotation)

ggplot(res) +
  aes(x=PC1, row.names(res)) +
  geom_col()
```


> Q24. What original variables are picked up strongly by PC1 in the positive direction? Do these make sense to you?

Fruit, pluribus, and hard are all picked up in the +ve direction and these do make sense based on the correlation structure in the dataset.